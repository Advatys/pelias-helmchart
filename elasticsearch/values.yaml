global:
  coordinating:
    name: coordinating-only
  kibanaEnabled: false

image:
  registry: docker.io
  repository: bitnami/elasticsearch
  tag: 7.8.0-debian-10-r10
  pullPolicy: IfNotPresent
  debug: false

sysctlImage:
  enabled: true
  registry: docker.io
  repository: bitnami/minideb
  tag: buster
  pullPolicy: Always

volumePermissions:
  enabled: false
  image:
    registry: docker.io
    repository: bitnami/minideb
    tag: buster
    pullPolicy: Always

clusterDomain: cluster.local

name: elastic

master:
  name: master
  replicas: 2
  updateStrategy:
    type: RollingUpdate
  heapSize: 128m
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001
  resources:
    requests:
      cpu: 25m
      memory: 256Mi
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false
  persistence:
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 2Gi
  service:
    type: ClusterIP
    port: 9300
    annotations: {}
  serviceAccount:
    create: false

coordinating:
  replicas: 2
  updateStrategy:
    type: RollingUpdate
  heapSize: 128m
  podAnnotations: {}
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001
  resources:
    requests:
      cpu: 25m
      memory: 256Mi
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false
  service:
    type: ClusterIP
    port: 9200
  serviceAccount:
    create: false

data:
  name: data
  replicas: 2
  updateStrategy:
    type: RollingUpdate
  heapSize: 1024m
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001
  resources:
    requests:
      cpu: 25m
      memory: 2048Mi
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false
  persistence:
    enabled: true
    annotations: {}
    accessModes:
      - ReadWriteOnce
    size: 20Gi
  serviceAccount:
    create: false

ingest:
  enabled: false
  name: ingest
  replicas: 2
  heapSize: 128m
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001
  affinity: {}
  nodeSelector: {}
  tolerations: []
  resources:
    limits: {}
    requests:
      cpu: 25m
      memory: 256Mi
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false
  service:
    type: ClusterIP
    port: 9300

curator:
  enabled: false
  name: curator
  image:
    registry: docker.io
    repository: bitnami/elasticsearch-curator
    tag: 5.8.1-debian-10-r155
    pullPolicy: IfNotPresent
  cronjob:
    schedule: "0 1 * * *"
    jobRestartPolicy: Never
  rbac:
    enabled: false
  serviceAccount:
    create: true
    name:
  psp:
    create: false
  hooks:
    install: false
    upgrade: false
  dryrun: false
  command: ["curator"]
  env: {}
  configMaps:
    action_file_yml: |-
      ---
      actions:
        1:
          action: delete_indices
          description: "Clean up ES by deleting old indices"
          options:
            timeout_override:
            continue_if_exception: False
            disable_action: False
            ignore_empty_list: True
          filters:
          - filtertype: age
            source: name
            direction: older
            timestring: '%Y.%m.%d'
            unit: days
            unit_count: 90
            field:
            stats_result:
            epoch:
            exclude: False
    config_yml: |-
      ---
      client:
        hosts:
          - {{ template "elasticsearch.coordinating.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}
        port: {{ .Values.coordinating.service.port }}

metrics:
  enabled: false
  name: metrics
  image:
    registry: docker.io
    repository: bitnami/elasticsearch-exporter
    tag: 1.1.0-debian-10-r153
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9114"
  resources:
    limits: {}
    requests: {}
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
  serviceMonitor:
    enabled: false

